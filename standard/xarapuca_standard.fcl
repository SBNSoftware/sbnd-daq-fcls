daq: 
{
  fragment_receiver: 
  {

    generator:   CAENV1740Readout
    fragment_type: CAENV1740
    max_fragment_size_bytes: 1000000
    GetNextFragmentBunchSize: 20

    DumpBinary: false # Dump binary before artdaq back-end
    DumpBinaryDir: ""

    fragment_id: 0
    board_id:    0

    Verbosity: 1
    SWTrigger: false #false disable the internal trigger of the caen, setting this parameter to true is not enough to activate the internal trigger. by internal trigger we mean that the caen readout is started by tbd conditions in the caen itself

    # ModeLVDS 0=REGISTER, 1=TRIGGER, 2=nBUSY/nVETO, 3=LEGACY
    # SBND: keep this parameter = 0
    ModeLVDS: 0

    # SelfTriggerMode 0:Disabled 1:ACQ_ONLY 2:EXTOUT_ONLY 3:ACQ_AND_EXTOUT
    # SelfTriggerMode: 0 # SBND V1740s do not make triggers

    # if a second trigger arrives before the readout is finished, set to false to ignore and true to extend readout
    allowTriggerOverlap: true

    # link is which port on the PCIe card it is connected, numbering starts at 0 
    link: 0 # Slot 7
    #link: 1 # Slot 13
    #link: 2 # Slot 16
    #link: 3 # Slot 19
    enableReadout: 1

    debugLevel:           7
    eventsPerInterrupt:   1
    IRQTimeoutMS:         500
    eventCounterWarning:  1       
    memoryAlmostFull:     2    
    maxEventsPerTransfer: 1
    runSyncMode:          0 # Run synchronization mode: 0=disabled 
    
    readoutMode:          0 # jcrespo: useless?
    testPattern:         0
    #testPattern:          1 # Triangular waveform from 0 to 1023
    irqWaitTime:          1 
   
    outputSignalMode:     0 # jcrespo: useless?    
    usePedestals:         false # jcrespo: useless?
    dacValue:             32768 # jcrespo: useless?

    # ioLevel: 0=NIM, 1=TTL
    #ioLevel:              0 # NIM for CIEMAT teststand
    ioLevel:              1 # TTL for SBN-ND
    nChannels:            64
    nGroups:              8

    boardId: 0 # jcrespo: used by artdaq?

    # default waveform length and postpercent
    recordLength:         768 # Good: 636, 768, 1536 # In samples where 1 sample=16 ns. For V1740 it must be an integer multiple of 3
    postPercent:         80 # Any number between 0 and 100
    #Use Trigger Time Tag (TTT) from CAEN header, which is a PPS counter 8ns/tick, to construct fragment timestamp. Default: true for ICARUS, false for SBND
    UseTimeTagForTimeStamp: false #True is using the PPS information
    # adds an offset to the fragment timestamp, set to 0 for SBND
    TimeOffsetNanoSec: 0
    # Shift time tag so timestamp reflects the trigger time and not the end of the waveform. Also uses the PPS information
    #    default for SBND is true    
    UseTimeTagShiftForTimeStamp: true #True is using the PPS information    

    # extTrgMode decides whether the external trigger should only be used to generate the
    # acquisition trigger, only to generate the trigger output or both
    # SBND: set to 1
    # extTrgMode: 0=DISABLED; 1=ACQ_ONLY; 2=TRGOUT_ONLY; 3=ACQ_AND_TRGOUT
    extTrgMode:           1

    # swTrgMode decides whether the trigger software should only be used to generate the 
    # acquisition trigger, only to generate the trigger output or both. 
    # you should set 'SWTrigger: true' to enable software triggers
    # SBND: set to 0
    # swTrgMode:  0=DISABLED; 1=ACQ_ONLY; 2=TRGOUT_ONLY; 3=ACQ_AND_TRGOUT
    swTrgMode:            0
    
    # acqMode: 0=Software Controlled, 1=Front Panel S_IN
    # SBND: set to 0
    acqMode:              0

    # triggerPolarity: 0=positive (trigger on rising edge), 1= negative (trigger on falling edge)
    # triggerPolarity:      1   # SBND V1740s do not make triggers

    CircularBufferSize: 500e6
    destinations: { }

    routing_table_config: {
      use_routing_master: false 
    }

    # unit of Pedestals are NOT ADC counts.  From the CAEN manual
    # The ADC scale ranges from 0 to 2NBit - 1, where NBit is the number of bits of the on-board ADC. The DAC controlling 
    # the DC Offset has 16 bits, i.e. it goes from 0 to 65535 independently from the NBit value and the board type.
    # Typically a DC Offset value of 32K (DAC mid-scale) corresponds to about the ADC mid-scale. Increasing values of DC
    # Offset make the baseline decrease. The range of the DAC is about 5% (typ.) larger than the ADC range, hence DAC
    #  settings close to 0 and 64K correspond to ADC respectively over and under range.
    #
    groupPedestal0:  54394
    groupPedestal1:  54394
    groupPedestal2:  54394
    groupPedestal3:  54394
    groupPedestal4:  54394
    groupPedestal5:  54394
    groupPedestal6:  54394
    groupPedestal7:  54394
    
    # Set to true to save the waveform
    groupEnable0:    true
    groupEnable1:    true
    groupEnable2:    true
    groupEnable3:    true
    groupEnable4:    true
    groupEnable5:    true
    groupEnable6:    true
    groupEnable7:    true


    BoardChainNumber: 0 # For daisy chaining boards
    GetNextSleep: 10
    InterruptEnable: 1
    
    InterruptLevel: 0
    InterruptStatusID: 0
    InterruptEventNumber: 1


#------------------------------------------------------------------
#  Everything here is exclusive for ICARUS, but must be defined // jcrespo: remove then?
     LVDSLogicValueG1: 3
     LVDSLogicValueG2: 3
     LVDSLogicValueG3: 3
     LVDSLogicValueG4: 3
     LVDSLogicValueG5: 3
     LVDSLogicValueG6: 3
     LVDSLogicValueG7: 3
     LVDSLogicValueG8: 3
#     
     LVDSOutWidthC1: 20
     LVDSOutWidthC2: 20
     LVDSOutWidthC3: 20
     LVDSOutWidthC4: 20
     LVDSOutWidthC5: 20
     LVDSOutWidthC6: 20
     LVDSOutWidthC7: 20
     LVDSOutWidthC8: 20
     LVDSOutWidthC9: 20
     LVDSOutWidthC10: 20
     LVDSOutWidthC11: 20
     LVDSOutWidthC12: 20
     LVDSOutWidthC13: 20
     LVDSOutWidthC14: 20
     LVDSOutWidthC15: 20
     LVDSOutWidthC16: 20
    
     # Aiwu added here: self trigger plority, it is 0x10 (or 16 in decimal, or 0010000) by default, we want to change bit[6] from 0 to 1, so 0x30 (or 80 in decimal, or 1010000)
     # Exclusive for ICARUS
     SelfTrigBit: 16
#  End ICARUS exclusive parameters
#--------------------------------------------------------------------

  } # end of fragment_receiver

  metrics: {
    brFile: {
      metricPluginType: "file"
      level: 3
      fileName: "/daq/log/metrics/xarapuca00_metrics.log"
      uniquify: true
    }
    send_system_metrics: true
    send_process_metrics: true
		      graphite:{
	namespace: "sbnd.xarapuca00."
	   host: "10.226.36.45"
      level: 10
       metricPluginType: "graphite"
		  port: 2003
      reporting_interval: 10
		    }
    #       metricPluginType: "redis"
    #   level: 3
    #   reporting_interval: 10.0
    #   redis_key_postfix: ":10s" 
    #   maxlen: 10000
    #   redis_key_prefix: "DABBoardReader:xarapuca01:"
    #   redis_passfile: "/var/adm/krb5/redis_password"
    # }
    # redis_testing: {

    #   metricPluginType: "redis"
    #   level: 3
    #   reporting_interval: 30.0
    #   redis_key_postfix: ":testing"
    #   maxlen: 10000
    #   redis_key_prefix: "DABBoardReader:xarapuca01:"
    #   redis_passfile: "/var/adm/krb5/redis_password"
    # }
    # redis_5m: {
    #   metricPluginType: "redis"
    #   level: 3
    #   reporting_interval: 300.0
    #   redis_key_postfix: ":5m" 
    #   maxlen: 10000
    #   redis_key_prefix: "DABBoardReader:xarapuca01:"
    #   redis_passfile: "/var/adm/krb5/redis_password"
    # }

  }
}
